.relay-status-card {
  margin-bottom: 16px;
  box-shadow: var(--mat-sys-level1);
}

.status-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 12px;

  >mat-icon {
    &.spinning {
      animation: spin 1s linear infinite;
    }
  }
}

.subtitle-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 16px;
}

.progress-text {
  font-weight: 500;
  color: var(--mat-sys-primary);
}

.status-indicators {
  display: flex;
  gap: 8px;
}

.status-chip {
  display: flex;
  align-items: center;
  font-size: 0.85em;
  border-radius: 4px;
  padding: 2px 6px;

  mat-icon {
    font-size: 1.1em;
    height: 1.1em;
    width: 1.1em;
    margin-right: 4px;
  }

  &.success {
    color: #4caf50;
  }

  &.pending {
    color: #ff9800;
  }

  &.failed {
    color: #f44336;
  }
}

mat-progress-bar {
  margin: 12px 0;
}

.relays-container {
  max-height: 300px;
  overflow-y: auto;
  margin-top: 16px;
}

.relay-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
  border-radius: 4px;
  margin-bottom: 4px;
  background-color: rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;

  &.success {
    border-left: 4px solid #4caf50;
    background-color: rgba(76, 175, 80, 0.1);
  }

  &.failed {
    border-left: 4px solid #f44336;
    background-color: rgba(244, 67, 54, 0.1);
  }

  &.pending {
    border-left: 4px solid #ff9800;
    background-color: rgba(255, 152, 0, 0.1);
  }
}

.relay-info {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.relay-name {
  font-family: monospace;
  font-size: 0.9em;
  font-weight: 500;
}

.relay-error {
  font-size: 0.75em;
  color: var(--mat-sys-error);
  opacity: 0.8;
}

.relay-status {
  display: flex;
  align-items: center;
}

.status-icon {
  font-size: 18px;
  height: 18px;
  width: 18px;

  &.success {
    color: #4caf50;
  }

  &.failed {
    color: #f44336;
  }

  &.pending {
    color: #ff9800;
  }

  &.spinning {
    animation: spin 1s linear infinite;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}